/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestTreasury, TestTreasuryInterface } from "../TestTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dummy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "genericCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "sendFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDummy",
        type: "uint256",
      },
    ],
    name: "updateDummy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bb9380380610bb983398101604081905261002f916100c5565b600080546001600160a01b031916331790558061004b81610052565b50506100f3565b6000546001600160a01b031633146100a35760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156100d6578081fd5b81516001600160a01b03811681146100ec578182fd5b9392505050565b610ab7806101026000396000f3fe6080604052600436106100c05760003560e01c80638da5cb5b11610074578063ca5f9d061161004e578063ca5f9d0614610229578063e1f21c6714610249578063fe9fbb801461026957600080fd5b80638da5cb5b14610177578063b6a5d7de146101c9578063b9181611146101e957600080fd5b806332e43a11116100a557806332e43a111461010e5780634650c308146101375780638522d1b21461015757600080fd5b806313af4035146100cc57806327c97fa5146100ee57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e7366004610924565b6102af565b005b3480156100fa57600080fd5b506100ec610109366004610924565b61037c565b34801561011a57600080fd5b5061012460025481565b6040519081526020015b60405180910390f35b34801561014357600080fd5b506100ec610152366004610980565b610449565b34801561016357600080fd5b506100ec6101723660046109fe565b6105a6565b34801561018357600080fd5b506000546101a49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012e565b3480156101d557600080fd5b506100ec6101e4366004610924565b610745565b3480156101f557600080fd5b50610219610204366004610924565b60016020526000908152604090205460ff1681565b604051901515815260200161012e565b34801561023557600080fd5b506100ec610244366004610a59565b600255565b34801561025557600080fd5b506100ec610264366004610945565b61081f565b34801561027557600080fd5b50610219610284366004610924565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60005473ffffffffffffffffffffffffffffffffffffffff163314610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604482015260640161032c565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604482015260640161032c565b60008373ffffffffffffffffffffffffffffffffffffffff1683836040516104f3929190610a71565b6000604051808303816000865af19150503d8060008114610530576040519150601f19603f3d011682016040523d82523d6000602084013e610535565b606091505b50509050806105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f43616c6c206661696c6564000000000000000000000000000000000000000000604482015260640161032c565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610627576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604482015260640161032c565b73ffffffffffffffffffffffffffffffffffffffff831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561069c5760405173ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f193505050501580156105a0573d6000803e3d6000fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526024820184905284169063a9059cbb906044015b602060405180830381600087803b15801561070d57600080fd5b505af1158015610721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610a39565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604482015260640161032c565b61081c8173ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604482015260640161032c565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063095ea7b3906044016106f3565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091f57600080fd5b919050565b600060208284031215610935578081fd5b61093e826108fb565b9392505050565b600080600060608486031215610959578182fd5b610962846108fb565b9250610970602085016108fb565b9150604084013590509250925092565b600080600060408486031215610994578283fd5b61099d846108fb565b9250602084013567ffffffffffffffff808211156109b9578384fd5b818601915086601f8301126109cc578384fd5b8135818111156109da578485fd5b8760208285010111156109eb578485fd5b6020830194508093505050509250925092565b600080600060608486031215610a12578283fd5b610a1b846108fb565b925060208401359150610a30604085016108fb565b90509250925092565b600060208284031215610a4a578081fd5b8151801515811461093e578182fd5b600060208284031215610a6a578081fd5b5035919050565b818382376000910190815291905056fea2646970667358221220311935b22a036728183ad8fcfb10a1c1df1ff89042b2e12eae7e3863016581b764736f6c63430008040033";

export class TestTreasury__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestTreasury> {
    return super.deploy(_governance, overrides || {}) as Promise<TestTreasury>;
  }
  getDeployTransaction(
    _governance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  attach(address: string): TestTreasury {
    return super.attach(address) as TestTreasury;
  }
  connect(signer: Signer): TestTreasury__factory {
    return super.connect(signer) as TestTreasury__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTreasuryInterface {
    return new utils.Interface(_abi) as TestTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTreasury {
    return new Contract(address, _abi, signerOrProvider) as TestTreasury;
  }
}
