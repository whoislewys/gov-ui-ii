/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Timelock, TimelockInterface } from "../Timelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_waitTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gsc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "callTimestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeValue",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "callHash",
        type: "bytes32",
      },
    ],
    name: "increaseTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "callHash",
        type: "bytes32",
      },
    ],
    name: "registerCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_waitTime",
        type: "uint256",
      },
    ],
    name: "setWaitTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "callHash",
        type: "bytes32",
      },
    ],
    name: "stopCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "timeIncreases",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "waitTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110f13803806110f183398101604081905261002f91610111565b600080546001600160a01b0319163317905561006c816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b600383905561007a82610082565b50505061014c565b6000546001600160a01b031633146100d35760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b038116811461010c57600080fd5b919050565b600080600060608486031215610125578283fd5b83519250610135602085016100f5565b9150610143604085016100f5565b90509250925092565b610f968061015b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c8d18a451161008c578063d8e4677511610066578063d8e4677514610217578063df351aaf1461023a578063e4d532661461024d578063fe9fbb801461026057600080fd5b8063c8d18a45146101cd578063ccca123b146101e0578063d7bcb566146101f757600080fd5b806388b49b83116100c857806388b49b831461012a5780638da5cb5b1461013d578063b6a5d7de14610187578063b91816111461019a57600080fd5b806313af4035146100ef57806327c97fa514610104578063821127d414610117575b600080fd5b6101026100fd366004610bc9565b610299565b005b610102610112366004610bc9565b61034c565b610102610125366004610cf0565b6103e1565b610102610138366004610cd8565b61055e565b60005461015d9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610102610195366004610bc9565b610634565b6101bd6101a8366004610bc9565b60016020526000908152604090205460ff1681565b604051901515815260200161017e565b6101026101db366004610bea565b6106d6565b6101e960035481565b60405190815260200161017e565b6101e9610205366004610cd8565b60046020526000908152604090205481565b6101bd610225366004610cd8565b60056020526000908152604090205460ff1681565b610102610248366004610cd8565b610a1b565b61010261025b366004610cd8565b610a6f565b6101bd61026e366004610bc9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103055760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103b35760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016102fc565b73ffffffffffffffffffffffffffffffffffffffff166000908152600160205260409020805460ff19169055565b3360009081526001602052604090205460ff166104405760405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420417574686f72697a6564000000000000000000000060448201526064016102fc565b60008181526005602052604090205460ff161561049f5760405162461bcd60e51b815260206004820152601e60248201527f76616c75652063616e206f6e6c79206265206368616e676564206f6e6365000060448201526064016102fc565b60008181526004602052604090205461051f5760405162461bcd60e51b8152602060048201526024808201527f6d7573742068617665206265656e2070726576696f75736c792072656769737460448201527f657265640000000000000000000000000000000000000000000000000000000060648201526084016102fc565b6000818152600460205260408120805484929061053d908490610eb1565b90915550506000908152600560205260409020805460ff1916600117905550565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105c55760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016102fc565b600081815260046020526040902054156106215760405162461bcd60e51b815260206004820152601260248201527f616c72656164792072656769737465726564000000000000000000000000000060448201526064016102fc565b6000908152600460205260409020429055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461069b5760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016102fc565b6106d38173ffffffffffffffffffffffffffffffffffffffff166000908152600160208190526040909120805460ff19169091179055565b50565b60025460ff16156107295760405162461bcd60e51b815260206004820152600a60248201527f5265656e7472616e63790000000000000000000000000000000000000000000060448201526064016102fc565b6002805460ff1916600117905560405160009061074e90859085908590602001610d4b565b60408051601f198184030181529181528151602092830120600081815260049093529120549091506107c25760405162461bcd60e51b815260206004820152601d60248201527f63616c6c20686173206e6f74206265656e20696e697469616c697a656400000060448201526064016102fc565b60035460008281526004602052604090205442916107df91610eb1565b1061082c5760405162461bcd60e51b815260206004820152601a60248201527f6e6f7420656e6f7567682074696d65206861732070617373656400000000000060448201526064016102fc565b8351821461087c5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420666f726d617474696e67000000000000000000000000000060448201526064016102fc565b60005b84518110156109e65760008582815181106108c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1685858481811061091a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200281019061092c9190610e4e565b60405161093a929190610d3b565b6000604051808303816000865af19150503d8060008114610977576040519150601f19603f3d011682016040523d82523d6000602084013e61097c565b606091505b50909150506001811515146109d35760405162461bcd60e51b815260206004820152600d60248201527f63616c6c2072657665727465640000000000000000000000000000000000000060448201526064016102fc565b50806109de81610ec9565b91505061087f565b50600090815260046020908152604080832083905560059091529020805460ff19908116909155600280549091169055505050565b333014610a6a5760405162461bcd60e51b815260206004820152601560248201527f636f6e7472616374206d7573742062652073656c66000000000000000000000060448201526064016102fc565b600355565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ad65760405162461bcd60e51b815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016102fc565b600081815260046020526040902054610b315760405162461bcd60e51b815260206004820152601560248201527f4e6f2063616c6c20746f2062652072656d6f766564000000000000000000000060448201526064016102fc565b600090815260046020908152604080832083905560059091529020805460ff19169055565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b7a57600080fd5b919050565b60008083601f840112610b90578081fd5b50813567ffffffffffffffff811115610ba7578182fd5b6020830191508360208260051b8501011115610bc257600080fd5b9250929050565b600060208284031215610bda578081fd5b610be382610b56565b9392505050565b600080600060408486031215610bfe578182fd5b833567ffffffffffffffff80821115610c15578384fd5b818601915086601f830112610c28578384fd5b8135602082821115610c3c57610c3c610f31565b8160051b604051601f19603f83011681018181108682111715610c6157610c61610f31565b60405283815282810186840183880185018d1015610c7d57898afd5b8997505b85881015610ca657610c9281610b56565b825260019790970196908401908401610c81565b50909850505087013592505080821115610cbe578384fd5b50610ccb86828701610b7f565b9497909650939450505050565b600060208284031215610ce9578081fd5b5035919050565b60008060408385031215610d02578182fd5b50508035926020909101359150565b8183528181602085013750600080602083850101526020601f19601f840116840101905092915050565b8183823760009101908152919050565b604080825284519082018190526000906020906060840190828801845b82811015610d9a57815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610d68565b50505083810382850152848152818101600586901b8201830187855b88811015610e3f57601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b3603018112610df8578788fd5b8a01803567ffffffffffffffff811115610e10578889fd5b8036038c1315610e1e578889fd5b610e2b85828a8501610d11565b958801959450505090850190600101610db6565b50909998505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610e82578283fd5b83018035915067ffffffffffffffff821115610e9c578283fd5b602001915036819003821315610bc257600080fd5b60008219821115610ec457610ec4610f02565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610efb57610efb610f02565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220006fa5a381196bca465b9a1a94293767cc822c26375be7c1512551a80769f66f64736f6c63430008040033";

export class Timelock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _waitTime: BigNumberish,
    _governance: string,
    _gsc: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Timelock> {
    return super.deploy(
      _waitTime,
      _governance,
      _gsc,
      overrides || {}
    ) as Promise<Timelock>;
  }
  getDeployTransaction(
    _waitTime: BigNumberish,
    _governance: string,
    _gsc: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _waitTime,
      _governance,
      _gsc,
      overrides || {}
    );
  }
  attach(address: string): Timelock {
    return super.attach(address) as Timelock;
  }
  connect(signer: Signer): Timelock__factory {
    return super.connect(signer) as Timelock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockInterface {
    return new utils.Interface(_abi) as TimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Timelock {
    return new Contract(address, _abi, signerOrProvider) as Timelock;
  }
}
