/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LockingVault, LockingVaultInterface } from "../LockingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_staleBlockLag",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
    ],
    name: "VoteChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDelegate",
        type: "address",
      },
    ],
    name: "changeDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fundedAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "firstDelegation",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "queryVotePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "queryVotePowerView",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staleBlockLag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161145038038061145083398101604081905261002f9161004a565b60609190911b6001600160601b03191660805260a052610082565b6000806040838503121561005c578182fd5b82516001600160a01b0381168114610072578283fd5b6020939093015192949293505050565b60805160601c60a0516113926100be6000396000818160ba015261057b01526000818161012d01528181610330015261069301526113926000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063e7d202831161005b578063e7d2028314610102578063f45346dc14610115578063fc0c546a14610128578063fc7e286d1461017457600080fd5b80632e1a7d4d1461008d5780639f973fd5146100a2578063c2c94b88146100b5578063d994844a146100ef575b600080fd5b6100a061009b366004611153565b6101c0565b005b6100a06100b036600461101f565b6103c9565b6100dc7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100dc6100fd3660046110a4565b610564565b6100dc610110366004611040565b6105b4565b6100a0610123366004611069565b6105d6565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e6565b61018761018236600461101f565b610910565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526bffffffffffffffffffffffff9091166020830152016100e6565b60006101ca610977565b336000908152602091909152604090208054909150829082906014906102179084907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff16611300565b82546bffffffffffffffffffffffff9182166101009390930a928302919092021990911617905550805473ffffffffffffffffffffffffffffffffffffffff1660006102616109bc565b9050600061026f8284610a0f565b90506102878361027f87846112e9565b849190610aa5565b73ffffffffffffffffffffffffffffffffffffffff8316337f33161cf2da28d747be9df136b6f3729390298494947268743193c53d73d3c2e06102ea887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611231565b60405190815260200160405180910390a36040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018690527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401602060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190611133565b505050505050565b60006103d3610977565b33600090815260209190915260408120805473ffffffffffffffffffffffffffffffffffffffff8581167fffffffffffffffffffffffff000000000000000000000000000000000000000083161783559193506bffffffffffffffffffffffff74010000000000000000000000000000000000000000820416929116906104586109bc565b905060006104668284610a0f565b90506104768361027f86846112e9565b73ffffffffffffffffffffffffffffffffffffffff8316337f33161cf2da28d747be9df136b6f3729390298494947268743193c53d73d3c2e06104d9877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611231565b60405190815260200160405180910390a360006104f68388610a0f565b905061050e8761050687846111b0565b859190610aa5565b60405185815273ffffffffffffffffffffffffffffffffffffffff88169033907f33161cf2da28d747be9df136b6f3729390298494947268743193c53d73d3c2e09060200160405180910390a350505050505050565b60008061056f6109bc565b90506105a987876105a07f0000000000000000000000000000000000000000000000000000000000000000436112e9565b84929190610be4565b979650505050505050565b6000806105bf6109bc565b90506105cc818585610c76565b9150505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5a65726f20616464722064656c65676174696f6e00000000000000000000000060448201526064015b60405180910390fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd90606401602060405180830381600087803b1580156106ec57600080fd5b505af1158015610700573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107249190611133565b50600061072f610977565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260209290925260409091208054909250168061080f575080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316178082558290849083906014906107dc9084907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff166111c8565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550610878565b8154849083906014906108499084907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff166111c8565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505b60006108826109bc565b905060006108908284610a0f565b90508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f33161cf2da28d747be9df136b6f3729390298494947268743193c53d73d3c2e0886040516108f191815260200190565b60405180910390a36109078361027f88846111b0565b50505050505050565b600080600061091d610977565b73ffffffffffffffffffffffffffffffffffffffff9485166000908152602091909152604090205493841694740100000000000000000000000000000000000000009094046bffffffffffffffffffffffff169392505050565b60006109b76040518060400160405280600881526020017f6465706f73697473000000000000000000000000000000000000000000000000815250610cd7565b905090565b6040805180820190915260608152600060208201526109b76040518060400160405280600b81526020017f766f74696e67506f776572000000000000000000000000000000000000000000815250610d50565b600080610a1d846020015190565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020919091526040902080549091506fffffffffffffffffffffffffffffffff1680610a6a576000925050506105d0565b60006105a983610a7b6001856112e9565b016001015460c081901c9177ffffffffffffffffffffffffffffffffffffffffffffffff90911690565b77ffffffffffffffffffffffffffffffffffffffffffffffff811115610b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f4f6f420000000000000000000000000000000000000000000000000000000000604482015260640161064f565b6000610b34846020015190565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020829052604081208054929350914360c01b9185831791608081901c916fffffffffffffffffffffffffffffffff909116908115610b9c57610b9886610a7b6001856112e9565b5090505b8143821415610bb357610bb06001846112e9565b90505b8481600189010155438214610bd757610bd78785610bd28660016111b0565b610d89565b5050505050505050505050565b600080610bf2866020015190565b73ffffffffffffffffffffffffffffffffffffffff86166000908152602082905260408120805492935091608081901c916fffffffffffffffffffffffffffffffff9091169080610c46858a8a8787610db2565b9150915083821115610c6857610c5d848387610f8b565b610c68858385610d89565b9a9950505050505050505050565b600080610c84856020015190565b73ffffffffffffffffffffffffffffffffffffffff85166000908152602082905260408120805492935091608081901c916fffffffffffffffffffffffffffffffff90911690610c688488838686610db2565b6000807f03a912cdb153207069d92d44a2357e3f0ce00f7ee84da3510f1c6851b4cac4ee905060008184604051602001610d1292919061116b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120949350505050565b6040805180820190915260608152600060208201526000610d7083610fbb565b6040805180820190915293845260208401525090919050565b808210610d9557600080fd5b6fffffffffffffffffffffffffffffffff1660809190911b179055565b60008082610e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f756e696e697469616c697a656400000000000000000000000000000000000000604482015260640161064f565b85851115610e2957600080fd5b828410610e3557600080fd5b6000610e426001856112e9565b90508460005b828214610ee65760006002610e5d85856111b0565b610e689060016111b0565b610e7291906111f8565b6001818d01015490915060c081901c9077ffffffffffffffffffffffffffffffffffffffffffffffff168b821415610eb457929650919450610f819350505050565b8b821015610ed0578a821015610ec8578293505b829450610ede565b610edb6001846112e9565b95505b505050610e48565b60018a8301015460c081901c9077ffffffffffffffffffffffffffffffffffffffffffffffff168a821115610f77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f536561726368204661696c757265000000000000000000000000000000000000604482015260640161064f565b9195509093505050505b9550959350505050565b81831115610f9857600080fd5b60018101835b83811015610fb457600082820155600101610f9e565b5050505050565b6000807f7b1a68ec3e3284b167e69db1c622dcfa612281976b71d7e2d239dbe16a75891a905060008184604051602001610d1292919061116b565b803573ffffffffffffffffffffffffffffffffffffffff8116811461101a57600080fd5b919050565b600060208284031215611030578081fd5b61103982610ff6565b9392505050565b60008060408385031215611052578081fd5b61105b83610ff6565b946020939093013593505050565b60008060006060848603121561107d578081fd5b61108684610ff6565b92506020840135915061109b60408501610ff6565b90509250925092565b6000806000806000608086880312156110bb578081fd5b6110c486610ff6565b94506020860135935060408601359250606086013567ffffffffffffffff808211156110ee578283fd5b818801915088601f830112611101578283fd5b81358181111561110f578384fd5b896020828501011115611120578384fd5b9699959850939650602001949392505050565b600060208284031215611144578081fd5b81518015158114611039578182fd5b600060208284031215611164578081fd5b5035919050565b82815260008251815b8181101561119057602081860181015185830182015201611174565b818111156111a15782602083860101525b50919091016020019392505050565b600082198211156111c3576111c361132d565b500190565b60006bffffffffffffffffffffffff8083168185168083038211156111ef576111ef61132d565b01949350505050565b60008261122c577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818413828413858304851182821616156112705761127061132d565b7f8000000000000000000000000000000000000000000000000000000000000000848712868205881281841616156112aa576112aa61132d565b8587129250878205871284841616156112c5576112c561132d565b878505871281841616156112db576112db61132d565b505050929093029392505050565b6000828210156112fb576112fb61132d565b500390565b60006bffffffffffffffffffffffff838116908316818110156113255761132561132d565b039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220020025dea8b3339592bb67d79309c8fd8fdd9211435886d8e51a1140a08c445164736f6c63430008040033";

export class LockingVault__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _staleBlockLag: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LockingVault> {
    return super.deploy(
      _token,
      _staleBlockLag,
      overrides || {}
    ) as Promise<LockingVault>;
  }
  getDeployTransaction(
    _token: string,
    _staleBlockLag: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _staleBlockLag, overrides || {});
  }
  attach(address: string): LockingVault {
    return super.attach(address) as LockingVault;
  }
  connect(signer: Signer): LockingVault__factory {
    return super.connect(signer) as LockingVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockingVaultInterface {
    return new utils.Interface(_abi) as LockingVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockingVault {
    return new Contract(address, _abi, signerOrProvider) as LockingVault;
  }
}
